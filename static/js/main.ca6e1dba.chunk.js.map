{"version":3,"sources":["soundManager.ts","util.js","components/game/cube/Cube.tsx","components/game/GameView.tsx","components/question/QuestionsModal.tsx","components/game/Game.tsx","App.tsx","components/OpenScreen/closeup.jpg","components/OpenScreen/OpenScreen.tsx","reportWebVitals.ts","index.tsx"],"names":["SoundManager","bg","this","Howl","src","loop","volume","stop","play","Util","from","to","Math","floor","random","array","temporaryValue","randomIndex","currentIndex","length","Cube","value","dir","cssClass","toDirClass","className","Dir","DOWON","UP","LEFT","RIGHT","GameView","boardSize","foods","snake","cloms","Array","fill","i","forEach","item","row","colm","renderRow","clom","j","map","QUESTIONS","questionText","options","answerIndex","QuestionsModal","onClose","useState","suffulArray","question","selectedIndex","setSelectedIndex","Modal","show","onHide","Form","Header","closeButton","Title","Body","option","index","Check","type","name","onChange","id","label","Footer","Button","variant","onClick","scoreToAdd","Screen","bordSize","Game","onGameEnd","soundMgr","gameInterval","setGameInterval","score","setScore","setSnake","setDir","setFoods","showQuestion","setShowQuestion","useEffect","init","startBg","createSnake","initFood","startGame","draw","createFood","startGameLoop","document","onkeydown","e","onKey","console","log","keyCode","stopGameLoop","clearInterval","setInterval","onFrame","pos","getEmptyRandomPlace","createRandomInt","push","some","getNextPos","resPos","Object","assign","doMove","gameOver","snakHead","stopBg","setTimeout","isGameOver","newPos","isInBoard","removedPos","shift","setDireactionSnakeParts","isEeatingMyself","eatedFood","findIndex","food","isEqual","unshift","splice","currentDir","getDiffDir","snakePartCurrent","snakePartNext","pos1","pos2","head","part","addedScore","OpenScreen","onStart","Card","style","width","Img","closeup","Text","size","App","currentScreen","setScreen","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"wSACaA,EAAb,WAEE,aAAe,yBADfC,QACc,EACZC,KAAKD,GAAK,IAAIE,OAAK,CACjBC,IAAK,CAAC,wBACNC,MAAM,EACNC,OAAQ,KANd,0CAUE,WACKJ,KAAKD,IACNC,KAAKD,GAAGM,SAZd,qBAgBE,WACKL,KAAKD,IACNC,KAAKD,GAAGO,WAlBd,KCDaC,EAAb,oGACI,SAAuBC,EAAMC,GACzB,OAAOC,KAAKC,MAAOD,KAAKE,SAAWH,EAAMD,KAFjD,yBAII,SAAmBK,GAIf,IAHA,IAAiCC,EAAgBC,EAA7CC,EAAeH,EAAMI,OAGlB,IAAMD,GAGXD,EAAcL,KAAKC,MAAMD,KAAKE,SAAWI,GAIzCF,EAAiBD,EAHjBG,GAAgB,GAIhBH,EAAMG,GAAgBH,EAAME,GAC5BF,EAAME,GAAeD,EAGvB,OAAOD,MApBf,K,eCOaK,EAAO,SAAC,GAA6B,IAA5BC,EAA2B,EAA3BA,MAAOC,EAAoB,EAApBA,IACrBC,EAAW,QAOf,MANc,cAAVF,EACAE,EAAQ,UAAMA,EAAN,sBAA4BC,EAAWF,IAEzCD,IACRE,EAAQ,UAAMA,EAAN,YAAkBF,IAErB,oBAAII,UAAWF,KAIpBC,EAAa,SAACF,GAChB,OAAOA,GACL,KAAKI,EAAIC,MACP,MAAO,WACT,KAAKD,EAAIE,GACP,MAAO,SACT,KAAKF,EAAIG,KACP,MAAO,WACT,KAAKH,EAAII,MACT,QACE,MAAO,cCpBFC,EAAW,SAAC,GAErB,IAFgE,IAA1CC,EAAyC,EAAzCA,UAAWC,EAA8B,EAA9BA,MAAOC,EAAuB,EAAvBA,MAClCC,EAAQ,IAAIC,MAAMJ,GAAWK,KAAK,EAAE,EAAGL,EAAU,GAC9CM,EAAI,EAAGA,EAAIH,EAAMhB,OAAQmB,IAC9BH,EAAMG,GAAK,IAAIF,MAAMJ,GAAWK,KAAK,EAAE,EAAEL,EAAU,GAEvDC,EAAMM,SAAS,SAACC,GACZL,EAAMK,EAAKC,KAAKD,EAAKE,MAAQF,KAEjCN,EAAMK,SAAS,SAACC,GACZL,EAAMK,EAAKC,KAAKD,EAAKE,MAAQF,KAEjC,IAAMG,EAAY,SAACC,EAAWC,GAC1B,OAAOD,EAAKE,KAAK,SAACN,EAAWF,GACzB,OAAO,cAAC,EAAD,CAAMjB,MAAOmB,EAAKnB,MAAOC,IAAKkB,EAAKlB,KAAnC,UAAgDuB,EAAhD,cAAuDP,QAGtE,OAAQ,gCACJ,gCAAQH,EAAMW,KAAK,SAACF,EAAMC,GAC3B,OAAO,6BACLF,EAAUC,EAAMC,IADFA,W,wBCvBjBE,G,MAAY,CACd,CACIC,aAAa,kFACbC,QAAS,CACL,uGACC,6EACA,2FACLC,YAAa,GAEjB,CACIF,aAAa,gGACbC,QAAS,CACL,4GACC,wHACA,4DAELC,YAAa,GAEjB,CACIF,aAAa,2KACbC,QAAS,CACL,eACC,eACA,kEAELC,YAAa,GAEjB,CACIF,aAAa,8OACbC,QAAS,CACL,gBACC,gBAGLC,YAAa,KAIRC,EAAiB,SAAC,GAAoB,IAAnBC,EAAkB,EAAlBA,QAAkB,EAC1BC,mBAAS5C,EAAK6C,YAAYP,GAAW,IAAlDQ,EADuC,sBAEJF,oBAAkB,GAFd,mBAEvCG,EAFuC,KAExBC,EAFwB,KAG9C,OAAQ,cAACC,EAAA,EAAD,CAAOC,MAAM,EAAMrC,IAAI,MAAMG,UAAU,iBAAiBmC,OAAQ,kBAAMR,EAAQ,IAA9E,SACJ,eAACS,EAAA,EAAD,CAAMvC,IAAI,MAAV,UACJ,cAACoC,EAAA,EAAMI,OAAP,CAAcC,aAAW,EAAzB,SACE,cAACL,EAAA,EAAMM,MAAP,sKAEF,eAACN,EAAA,EAAMO,KAAP,WAAaV,EAASP,aACrBO,EAASN,QAAQH,KAAI,SAACoB,EAAgBC,GACnC,OAAO,cAACN,EAAA,EAAKO,MAAN,CACCC,KAAK,QACL/C,IAAI,MACJgD,KAAK,gBAELC,SAAU,kBAAMd,EAAiBU,IACjCK,GAAE,gBACFC,MAAOP,GAHFC,SAMjB,cAACT,EAAA,EAAMgB,OAAP,UACE,cAACC,EAAA,EAAD,CAAQC,QAAQ,UAAUC,QAAS,WAC/B,IAAIC,EAAa,EACbtB,IAAkBD,EAASL,cAC7B4B,EAAa,IAEf1B,EAAQ0B,IALZ,wCC1DOpD,EAAb,kCAAaA,EACFG,KAAe,OADbH,EAEFI,MAAe,QAFbJ,EAGFC,MAAe,OAHbD,EAIFE,GAAY,KAcvB,ICjBKmD,EDkBCC,EAAmB,GACZC,EAAO,SAAC,GAAuB,IAAtBC,EAAqB,EAArBA,UACZC,EAAyB,IAAInF,EADI,EAEDqD,qBAFC,mBAElC+B,EAFkC,KAEpBC,EAFoB,OAGfhC,mBAAiB,GAHF,mBAGlCiC,EAHkC,KAG3BC,EAH2B,OAIflC,mBAA2B,IAJZ,mBAIlCnB,EAJkC,KAI3BsD,EAJ2B,OAKnBnC,mBAAiB3B,EAAII,OALF,mBAKlCR,EALkC,KAK7BmE,EAL6B,OAMfpC,mBAAsB,IANP,mBAMlCpB,EANkC,KAM3ByD,EAN2B,OAODrC,oBAAkB,GAPjB,mBAOlCsC,EAPkC,KAOpBC,EAPoB,KAQvCC,qBAAU,WACPC,MACD,IAEF,IAAMA,EAAO,WACTX,EAASY,UACTC,IACAC,IACAC,IACAC,KAGEF,EAAW,WACb,IAAK,IAAI9B,EAAQ,EAAGA,EAvBF,EAuBqBA,IACrCiC,IAEFV,EAASzD,IAGLiE,EAAY,WAChBG,IACAC,SAASC,UAAY,SAACC,GAAD,OAAOC,EAAMD,KAG9BC,EAAQ,SAACD,GACbE,QAAQC,IAAI,UAAWH,GAEL,KAAdA,EAAEI,SAAkBtF,IAAQI,EAAIC,MAClCL,EAAMI,EAAIE,GACa,KAAd4E,EAAEI,SAAkBtF,IAAQI,EAAIE,GACzCN,EAAMI,EAAIC,MACa,KAAd6E,EAAEI,SAAkBtF,IAAQI,EAAII,MACzCR,EAAMI,EAAIG,KACY,KAAb2E,EAAEI,SAAiBtF,IAAQI,EAAIG,OACxCP,EAAMI,EAAII,OAEZ2D,EAAOnE,GACPoF,QAAQC,IAAI,UAAWrF,IAGnBuF,EAAe,WACnBC,cAAc1B,IAGViB,EAAgB,WACpBjB,EAAc2B,aAAY,kBAAMC,MAAW,KAC3C3B,EAAgBD,IAcZgB,EAAa,WACjB,IAAIa,EAAMC,IACVD,EAAI5F,MAAJ,eAAoBZ,EAAK0G,gBAAgB,EAAG,IAC5ClF,EAAMmF,KAAKH,IAGPC,EAAsB,SAAtBA,IACJ,IAAMzE,EAAM7B,KAAKC,MAAMD,KAAKE,SAAWF,KAAKC,MAAMmE,KAC5CtC,EAAO9B,KAAKC,MAAMD,KAAKE,SAAWF,KAAKC,MAAMmE,KAEnD,OADgB9C,EAAMmF,MAAK,SAAAJ,GAAG,OAAIA,EAAIxE,MAAQA,GAAOwE,EAAIvE,OAASA,MAAST,EAAMoF,MAAK,SAAAJ,GAAG,OAAIA,EAAIxE,MAAQA,GAAOwE,EAAIvE,OAASA,KAEpHwE,IAEA,CACLzE,MACAC,SAKAsD,EAAc,WAClB,IAAIiB,EAAiB,CACnBxE,IAAK7B,KAAKC,MAAMmE,KAChBtC,KAAM9B,KAAKC,MAAMmE,KACjB1D,IAAKI,EAAII,MACTT,MAAM,aAERa,EAAMkF,KAAKH,GACX,IAAK,IAAI9C,EAAQ,EAAGA,EAAQ,EAAGA,IAC7B8C,EAAMK,EAAWL,EAAK3F,GACtBY,EAAMkF,KAAKH,GAEbzB,EAAStD,IAILoF,EAAa,SAACL,EAAS3F,GAC3B,IAAIiG,EAASC,OAAOC,OAAO,GAAIR,GAC/B,OAAQ3F,GACN,KAAKI,EAAIG,KACP0F,EAAO7E,KAAO6E,EAAO7E,KAAO,EAC5B,MACF,KAAKhB,EAAII,MACPyF,EAAO7E,KAAO6E,EAAO7E,KAAO,EAC5B,MACF,KAAKhB,EAAIC,MACP4F,EAAO9E,IAAM8E,EAAO9E,IAAM,EAC1B,MACF,KAAKf,EAAIE,GACP2F,EAAO9E,IAAM8E,EAAO9E,IAAM,EAG9B,OAAO8E,GAOHP,EAAU,WACGU,KAEfC,KAIEC,EAAW,WACf,OAAO1F,EAAMA,EAAMf,OAAS,IAGxBwG,EAAW,WACfxC,EAAS0C,SACThB,IACAiB,YAAW,kBAAM5C,MAAc,MAG3BiB,EAAO,WAEXV,EAAOnE,GACPoE,EAASzD,GACTuD,EAAStD,IAGLwF,EAAS,WACb,IAAIK,GAAa,EACXC,EAASV,EAAWM,IAAYtG,GACtC,IAAK2G,GAAUD,GAEb,OADAD,GAAa,EAGf,IAAIG,EAAahG,EAAMiG,QAGvB,GAFAjG,EAAMkF,KAAKY,GACXI,IACIC,KAEF,OADAN,GAAa,EAGf,IAAMO,EAAYrG,EAAMsG,WAAU,SAACC,GACjC,OAAOC,GAAQD,EAAMR,MAgBvB,OAbmB,IAAfM,IACFpG,EAAMwG,QAAQR,GACdxB,QAAQC,IAAI,YAAa2B,GAEzB/C,EADAD,GAAgB,IAEhBrD,EAAM0G,OAAOL,EAAW,GACxBlC,IACI3F,EAAK0G,gBAAgB,EAAE,GAAK,IAtHlCN,IAEAjB,GAAgB,KAwHhBJ,EAAS,YAAItD,IACbwD,EAAS,YAAIzD,IACN8F,GAIHK,EAA0B,WAC9B,IAAK,IAAIjE,EAAQ,EAAGA,EAAQjC,EAAMf,OAAO,EAAGgD,IAAQ,CAClD,IAAMyE,EAAaC,EAAW3G,EAAMiC,GAASjC,EAAMiC,EAAQ,IAC3DjC,EAAMiC,GAAO7C,IAAMsH,EAErB1G,EAAMA,EAAMf,OAAO,GAAGG,IAAMA,GAGxBuH,EAAa,SAACC,EAA4BC,GAC9C,OAAGD,EAAiBpG,KAAQqG,EAAcrG,KACjChB,EAAIG,KAEViH,EAAiBpG,KAAQqG,EAAcrG,KACjChB,EAAII,MAEVgH,EAAiBrG,IAAOsG,EAActG,IAChCf,EAAIC,MAEVmH,EAAiBrG,IAAOsG,EAActG,IAChCf,EAAIE,GAENF,EAAII,OAGP2G,GAAU,SAACO,EAAWC,GAC1B,OAAQD,EAAKvG,MAAQwG,EAAKxG,KAAOuG,EAAKtG,OAASuG,EAAKvG,MAGhD2F,GAAkB,WAEtB,IADA,IAAIa,EAAOtB,IACFzD,EAAQ,EAAGA,EAAQjC,EAAMf,OAAS,EAAGgD,IAAS,CACrD,IAAMgF,EAAOjH,EAAMiC,GACnB,GAAIsE,GAAQS,EAAMC,GAChB,OAAO,EAGX,OAAO,GAGHlB,GAAY,SAAChB,GAGjB,OAFAP,QAAQC,IAAI,qBAAsBM,KAE9BA,EAAIxE,KAAOuC,GACbiC,EAAIxE,IAAM,GACVwE,EAAIvE,MAAQsC,IACZiC,EAAIvE,KAAO,IAOf,OAAO,qBAAKjB,UAAU,cAAf,SACL,sBAAKA,UAAU,aAAf,UACE,sBAAKA,UAAU,QAAf,mDAAgC6D,EAAhC,OACA,cAAC,EAAD,CAAUtD,UAAWgD,EAAU9C,MAAOA,EAAOD,MAAOA,IACnD0D,EAAc,cAAC,EAAD,CAAgBvC,QAAS,SAACgG,GAEvC7D,EADAD,GAAgB8D,GAEhBxD,GAAgB,GArLpBS,IACAC,SAASC,UAAY,SAACC,GAAD,OAAOC,EAAMD,OAsL1B,W,QEhRD,MAA0B,oCCI5B6C,EAAa,SAAC,GAAoB,IAAnBC,EAAkB,EAAlBA,QACxB,OAAO,qBAAK7H,UAAU,SAAf,SACH,eAAC8H,EAAA,EAAD,CAAMC,MAAO,CAAEC,MAAO,SAAtB,UACI,cAACF,EAAA,EAAKG,IAAN,CAAU9E,QAAQ,MAAMxE,IAAKuJ,IAC7B,eAACJ,EAAA,EAAKtF,KAAN,WACI,cAACsF,EAAA,EAAKvF,MAAN,uEACJ,cAACuF,EAAA,EAAKK,KAAN,mHACA,cAACjF,EAAA,EAAD,CAAQC,QAAQ,UAAUC,QAASyE,EAASO,KAAK,KAAjD,2F,gBFLP9E,K,wBAAAA,E,aAAAA,M,KAcU+E,MATf,WAAgB,IAAD,EACsBzG,mBAAiB0B,EAAOsE,YAD9C,mBACNU,EADM,KACSC,EADT,KAEb,OACE,qBAAKvI,UAAU,MAAf,SACKsI,IAAkBhF,EAAOsE,WAAY,cAAC,EAAD,CAAYC,QAAS,kBAAKU,EAAUjF,EAAOE,SACjF,cAAC,EAAD,CAAMC,UAAW,kBAAK8E,EAAUjF,EAAOsE,kBGFhCY,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFtE,SAASuE,eAAe,SAM1BZ,M","file":"static/js/main.ca6e1dba.chunk.js","sourcesContent":["import {Howl} from 'howler';\nexport class SoundManager {\n  bg: Howl;\n  constructor() {\n    this.bg = new Howl({\n      src: ['./sound/bg-sound.mp3'],\n      loop: true,\n      volume: 0.1\n    });\n  }\n\n  stopBg() {\n    if(this.bg) { \n      this.bg.stop();\n    }\n  }\n\n  startBg() {\n    if(this.bg) {\n      this.bg.play();\n    }\n  }\n\n}\n","export class Util {\n    static createRandomInt(from, to) {\n        return Math.floor((Math.random() * to) + from);\n    }\n    static suffulArray(array) {\n        var currentIndex = array.length, temporaryValue, randomIndex;\n      \n        // While there remain elements to shuffle...\n        while (0 !== currentIndex) {\n      \n          // Pick a remaining element...\n          randomIndex = Math.floor(Math.random() * currentIndex);\n          currentIndex -= 1;\n      \n          // And swap it with the current element.\n          temporaryValue = array[currentIndex];\n          array[currentIndex] = array[randomIndex];\n          array[randomIndex] = temporaryValue;\n        }\n      \n        return array;\n      }\n      \n}\n","import { Dir } from '../Game';\nimport './Cube.css'\n\ntype CubeProps  = {\n    value: string,\n    dir: string\n}\nexport const Cube = ({value, dir}: CubeProps) => {\n    let cssClass = 'cell ';\n    if (value === 'snakePart' ) {\n        cssClass = `${cssClass} snakePart ${toDirClass(dir)}`;\n\n    } else if(value)  {\n      cssClass = `${cssClass} ${value}`;\n    }\n    return <td className={cssClass} ></td>\n            \n    \n}\nconst toDirClass = (dir: string): string => {\n    switch(dir) {\n      case Dir.DOWON: \n        return 'dir-down';\n      case Dir.UP: \n        return 'dir-up';\n      case Dir.LEFT: \n        return 'dir-left';\n      case Dir.RIGHT: \n      default:\n        return 'dir-right';\n    }\n  }","import React from \"react\";\nimport { Cube } from \"./cube/Cube\";\nimport { Food, SnakePart } from \"./Game\";\n\ntype GameProps = {\n    boardSize: number,\n    foods: Array<Food>,\n    snake: Array<SnakePart> \n}\nexport const GameView = ({boardSize, foods, snake}: GameProps) =>  {\n    const cloms = new Array(boardSize).fill(0,0, boardSize-1);\n    for (var i = 0; i < cloms.length; i++) {\n        cloms[i] = new Array(boardSize).fill(0,0,boardSize-1);\n    }\n    foods.forEach( (item) => {\n        cloms[item.row][item.colm] = item;\n    });\n    snake.forEach( (item) => {\n        cloms[item.row][item.colm] = item;\n    });\n    const renderRow = (clom: any, j: number) => {\n        return clom.map( (item: any, i: number) => {\n            return <Cube value={item.value} dir={item.dir} key={`${j} - ${i}`}></Cube>\n        });\n    }\n    return (<table>\n        <tbody>{cloms.map( (clom, j: number) => {\n       return(<tr key={j}> \n        {renderRow(clom, j)}\n        </tr>);\n    })}</tbody>\n    </table>);\n}","import React, { useState } from \"react\"\nimport { Button, Form, Modal } from \"react-bootstrap\"\nimport { Util } from \"../../util\";\nimport './QuestionModal.css';\nconst QUESTIONS = [\n    {\n        questionText:'לך אל הנמלה עצל ...',\n        options: [\n            'ראה את דרכיה ושב בצל',\n             'ותחזור מלא מרץ' ,\n             'ראה את דרכיה וכחם'],\n        answerIndex: 2\n    },\n    {\n        questionText:'כמה רגלים יש לנמלה',\n        options: [\n            'שתי רגלים השאר ידיים',\n             'שמונה רגלים כמו לעכביש',\n             'שישה רגלים '\n        ],\n        answerIndex: 2\n    },\n    {\n        questionText:'האם נמלה מקימה קן ליד מקודות מזון',\n        options: [\n            'כן',\n             'לא',\n             'היא לא אוכלת'\n        ],\n        answerIndex: 0\n    },\n    {\n        questionText:'האם המלכה היא הנמלה היחידה בקן שיכולה להתרבות',\n        options: [\n            'כן ',\n             'לא'\n             \n        ],\n        answerIndex: 0\n    }\n];\n\nexport const QuestionsModal = ({onClose}: any) => {\n    const [question]  = useState(Util.suffulArray(QUESTIONS)[0]);\n    const [selectedIndex, setSelectedIndex] = useState<number>(-1);\n    return  <Modal show={true} dir=\"rtl\" className='question-modal' onHide={() => onClose(0)} >\n        <Form dir=\"rtl\">\n    <Modal.Header closeButton>\n      <Modal.Title>ענה על השאלה נכון וקבל נקודות</Modal.Title>\n    </Modal.Header>\n    <Modal.Body>{question.questionText}\n    {question.options.map((option: string, index: number) => {\n        return <Form.Check \n                type='radio'\n                dir=\"rtl\"\n                name=\"answerOptions\"\n                key={index}\n                onChange={() => setSelectedIndex(index)}\n                id={`default-radio`}\n                label={option}/>\n    })}\n    </Modal.Body>\n    <Modal.Footer>\n      <Button variant=\"primary\" onClick={()=> {\n          let scoreToAdd = 0;\n          if (selectedIndex === question.answerIndex) {\n            scoreToAdd = 50\n          }\n          onClose(scoreToAdd);\n      }}>\n        שלח\n      </Button>\n    </Modal.Footer>\n    </Form>\n  </Modal>\n}","import React, { useEffect, useState } from \"react\";\nimport { SoundManager } from \"../../soundManager\";\nimport { Util } from \"../../util\";\nimport { GameView } from \"./GameView\";\nimport {QuestionsModal} from \"./../question/QuestionsModal\";\nexport class Dir {\n    static LEFT: string = 'left';\n    static RIGHT: string= 'right';\n    static DOWON: string= 'down';\n    static UP: string= 'UP';\n};\nexport type Food  = {\n    colm: number,\n    row: number,\n    value: string\n}\nexport type SnakePart  = {\n    colm: number,\n    row: number,\n    value: string,\n    dir: string\n}\n\nconst numOfFood: number = 8;\nconst bordSize: number = 17;\nexport const Game = ({onGameEnd}: any) =>  {\n    const soundMgr: SoundManager = new SoundManager();\n    let [gameInterval, setGameInterval] = useState<any>();\n    let [score, setScore] = useState<number>(0);\n    let [snake, setSnake] = useState<Array<SnakePart>>([]);\n    let [dir, setDir] = useState<string>(Dir.RIGHT);\n    let [foods, setFoods] = useState<Array<Food>>([]);\n    let [showQuestion, setShowQuestion] = useState<boolean>(false);\n    useEffect(() => {\n       init(); \n    },[]);\n\n    const init = () => {\n        soundMgr.startBg();\n        createSnake();\n        initFood();\n        startGame();\n        draw();\n    }\n    \n    const initFood = () => {\n        for (let index = 0; index < numOfFood; index++) {\n          createFood();\n        }\n        setFoods(foods);\n      }\n    \n      const startGame = () =>  {\n        startGameLoop();\n        document.onkeydown = (e) => onKey(e);\n      }\n    \n      const onKey = (e: any) => {\n        console.log('set dit', e);\n        //e = e || window.event;\n        if (e.keyCode === 38 && dir !== Dir.DOWON) {\n          dir = Dir.UP;\n        } else if (e.keyCode === 40 && dir !== Dir.UP) {\n          dir = Dir.DOWON;\n        } else if (e.keyCode === 37 && dir !== Dir.RIGHT) {\n          dir = Dir.LEFT;\n        } else if (e.keyCode ===39 && dir !== Dir.LEFT) {\n          dir = Dir.RIGHT;\n        }\n        setDir(dir);\n        console.log('set dit', dir);\n      }\n      \n      const stopGameLoop = () => {\n        clearInterval(gameInterval);\n      }\n\n      const startGameLoop = () => {\n        gameInterval= setInterval(() => onFrame(), 300);\n        setGameInterval(gameInterval);\n      }\n    \n      const haltGame = () => {\n        stopGameLoop();\n        //soundMgr.muteBg();\n        setShowQuestion(true);\n      }\n\n      const resumeGame = () => {\n        startGameLoop();\n        document.onkeydown = (e) => onKey(e);\n        //soundMgr.unMuteBg();\n      }\n      const createFood = () => {\n        let pos = getEmptyRandomPlace();\n        pos.value = `food-${Util.createRandomInt(1, 3)}`;\n        foods.push(pos);\n      }\n      \n      const getEmptyRandomPlace = (): any => {\n        const row = Math.floor(Math.random() * Math.floor(bordSize-1));\n        const colm = Math.floor(Math.random() * Math.floor(bordSize-1));\n        const isTaken = snake.some(pos => pos.row === row && pos.colm === colm) || foods.some(pos => pos.row === row && pos.colm === colm)\n        if (isTaken) {\n          return getEmptyRandomPlace();\n        } else {\n          return {\n            row,\n            colm\n          };\n        }\n      }\n\n      const createSnake = () =>  {\n        let pos: SnakePart = {\n          row: Math.floor(bordSize / 2),\n          colm: Math.floor(bordSize / 2),\n          dir: Dir.RIGHT,\n          value:'snakePart'\n        };\n        snake.push(pos);\n        for (let index = 0; index < 5; index++) {\n          pos = getNextPos(pos, dir);\n          snake.push(pos);\n        }\n        setSnake(snake);\n    \n      }\n\n      const getNextPos = (pos:any, dir: string) => {\n        let resPos = Object.assign({}, pos);\n        switch (dir) {\n          case Dir.LEFT:\n            resPos.colm = resPos.colm - 1;\n            break;\n          case Dir.RIGHT:\n            resPos.colm = resPos.colm + 1;\n            break;\n          case Dir.DOWON:\n            resPos.row = resPos.row + 1;\n            break;\n          case Dir.UP:\n            resPos.row = resPos.row - 1;\n            break;\n        }\n        return resPos;\n      }\n    \n      const getElementByPos = (pos:any)  => {\n        return document.getElementById(pos.row + '-' + pos.colm);\n      }\n    \n      const onFrame = () =>  {\n        let isGameOver = doMove();\n        if (isGameOver) {\n          gameOver();\n        }\n      }\n\n      const snakHead = () => {\n        return snake[snake.length - 1];\n      }\n\n      const gameOver = () => {\n        soundMgr.stopBg();\n        stopGameLoop();\n        setTimeout(() => onGameEnd() , 1000);\n      }\n     \n      const draw = ()  => {\n        //this.gameRender.render(this.foods, this.snake);\n        setDir(dir);\n        setFoods(foods);\n        setSnake(snake);\n      }\n      \n      const doMove = () => {\n        let isGameOver = false;\n        const newPos = getNextPos(snakHead(), dir);\n        if (!isInBoard(newPos) ) {\n          isGameOver = true;\n          return isGameOver;\n        }\n        let removedPos = snake.shift();\n        snake.push(newPos);\n        setDireactionSnakeParts();\n        if (isEeatingMyself()) {\n          isGameOver = true;\n          return isGameOver;  \n        }\n        const eatedFood = foods.findIndex((food) => {\n          return isEqual(food, newPos);\n        });\n    \n        if (eatedFood !== -1) {\n          snake.unshift(removedPos as SnakePart);\n          console.log('eatedFood', eatedFood);\n          score = score + 10;\n          setScore(score);\n          foods.splice(eatedFood, 1);\n          createFood();\n          if (Util.createRandomInt(0,6) > 2) {\n            haltGame();  \n          }\n        }\n        setSnake([...snake]);\n        setFoods([...foods]);\n        return isGameOver;\n        \n      }\n\n      const setDireactionSnakeParts = () => {\n        for (let index = 0; index < snake.length-1; index++){\n          const currentDir = getDiffDir(snake[index] , snake[index + 1]);\n          snake[index].dir = currentDir;\n        }\n        snake[snake.length-1].dir = dir;\n      }\n\n      const getDiffDir = (snakePartCurrent:SnakePart, snakePartNext: SnakePart): string => {\n        if(snakePartCurrent.colm >  snakePartNext.colm) {\n          return Dir.LEFT;\n        }\n        if(snakePartCurrent.colm <  snakePartNext.colm) {\n          return Dir.RIGHT;\n        }\n        if(snakePartCurrent.row <  snakePartNext.row) {\n          return Dir.DOWON;\n        }\n        if(snakePartCurrent.row >  snakePartNext.row) {\n          return Dir.UP;\n        }\n        return Dir.RIGHT;\n      }\n\n      const isEqual = (pos1: any, pos2: any) =>  {\n        return (pos1.row === pos2.row && pos1.colm === pos2.colm)\n      }\n    \n      const isEeatingMyself = () => {\n        let head = snakHead();\n        for (let index = 0; index < snake.length - 1; index++) {\n          const part = snake[index];\n          if (isEqual(head, part)) {\n            return true;\n          }\n        }\n        return false;\n      }\n\n      const isInBoard = (pos:any) => {\n        console.log('check if game over', pos);\n        \n        if (pos.row >= bordSize ||\n          pos.row < 0 ||\n          pos.colm >= bordSize-1 ||\n          pos.colm < 0) {\n          return false;\n        } else {\n          return true;\n        }\n      }\n    \n      return <div className=\"game-screen\">\n        <div className=\"game-board\">\n          <div className=\"score\">נקודות: {score} </div>\n          <GameView boardSize={bordSize} snake={snake} foods={foods}/>\n          {showQuestion? <QuestionsModal onClose={(addedScore: number) => {\n            score = score + addedScore;\n            setScore(score);\n            setShowQuestion(false);\n            resumeGame();\n          }}/>: null}\n          </div>\n          </div>\n}\n\n\n","import React, { useState } from 'react';\nimport './App.css';\nimport { Game } from './components/game/Game';\nimport { OpenScreen } from './components/OpenScreen/OpenScreen';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nenum Screen {\n  OpenScreen = 'OpenScreen',\n  Game = 'Game'\n}\n\nfunction App() {\n  const [currentScreen, setScreen] = useState<string>(Screen.OpenScreen);\n  return (\n    <div className=\"App\">\n        {currentScreen === Screen.OpenScreen? <OpenScreen onStart={()=> setScreen(Screen.Game)}/>:\n        <Game onGameEnd={()=> setScreen(Screen.OpenScreen)}/>}\n    </div>\n  );\n}\nexport default App;\n","export default __webpack_public_path__ + \"static/media/closeup.8e44aa94.jpg\";","import React from \"react\"\nimport { Button, Card } from \"react-bootstrap\"\nimport closeup from './closeup.jpg'; // Tell webpack this JS file uses this image\n\nexport const OpenScreen = ({onStart}: any) => {\n    return <div className=\"screen\">\n        <Card style={{ width: '38rem' }}>\n            <Card.Img variant=\"top\" src={closeup} />\n            <Card.Body>\n                <Card.Title> משחק הנמלה</Card.Title>\n            <Card.Text>שחקו וענו על השאלות </Card.Text>\n            <Button variant=\"primary\" onClick={onStart} size=\"lg\">התחל משחק חדש</Button>\n        </Card.Body>\n        </Card>\n  </div>\n}\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}